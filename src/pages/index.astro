---
import Layout from "../layouts/Layout.astro";

// const resumeFetch = await fetch("");
// const response = resumeFetch.json();
const resumeData = {
  name: "Tran Van Do",
  position: ".NET Developer",
  contact: {
    address: "Go Vap District, Ho Chi Minh City",
    phone: "+84 774 276 286",
    email: "tvddaman@gmail.com",
    linkedin: "/tvddaman",
  },
  education: [
    {
      school: "Cao Thang College",
      major: "IT",
    },
  ],
  certificates: [
    {
      name: "AZ 900",
      link: "https://google.com/",
    },
  ],
  skills: [
    ".NET Core",
    "C#",
    "EF Core",
    "Javascript",
    "HTMl 5",
    "CSS 3",
    "Angular",
    "React",
    "Rust",
    "Git",
    "Azure Cloud",
    "Docker",
  ],
  workHistories: [
    {
      company: "Sai Gon Technology",
      link: "",
      position: "Senior Developer",
      from: "May - 2021",
      to: "Now",
      project: [
        {
          name: "Idealpos",
          description: "Cloud-POS System",
          headCount: 6,
          position: ".NET developer",
          mainResponsibility: "Develop new features, maintain old features",
          technology:
            ".NET Framework, .NET Core, EF Framework, EF Core, Azure SQL",
          additionalInfo: {},
        },
      ],
    },
  ],
  projects: [
    {
      name: "Shibuicat Universe",
      link: "",
      description: "It's a framework for self development",
      headCount: 1,
      position: "Solo developer",
      mainResponsibility: "Develop/ maintain all the features",
      technology:
        ".NET Core, EF Core, AstroJS, PostgreSQL, Rust, Self Hosting, AWS",
      additionalInfo: {},
    },
  ],
};
---

<Layout title={summarize.name}>
  <main class="md:basis-1/2 basis-full bg-slate-950">
    <div class="resume-container">
      <Header
        name={summarize.name}
        workedSince={summarize.workedSince}
        title={summarize.title}
        profilePicture={summarize.profilePicture}
      />
      <div class="grid grid-cols-1 gap-4 md:grid-cols-4">
        <div
          class="flex flex-col col-span-1 bg-zinc-800 p-2 items-center md:items-start"
        >
          <div class="text-2xl font-bold mb-3">
            <span class="bg-teal-900">Personal Info</span>
          </div>
          <PersonalInfo {...summarize.contact as any} />
        </div>

        <div class="flex flex-col col-span-1 md:col-span-3 bg-zinc-800 p-2">
          <div class="skills-section mb-3">
            <div class="text-2xl font-bold mb-3">
              <span class="bg-teal-900">Skills</span>
            </div>
            <div>
              {
                summarize.skillSets.map((x: any) => {
                  return <Skillset skills={x} />;
                })
              }
            </div>
          </div>
          <div class="work-history-section mb-3">
            <div class="text-2xl font-bold my-2">
              <span class="bg-teal-900">Work History</span>
            </div>
            <div class="work-histories">
              {
                summarize.workHistories.map((x: any) => {
                  return <Company {...x} />;
                })
              }
            </div>
          </div>
          <div class="side-project">
            <div class="text-2xl my-2">
              <span class="bg-teal-900">Side Projects</span>
            </div>
            <div>
              {
                summarize.sideProjects.map((x: any) => {
                  return (
                    <div class="translate-z-1">
                      <Project {...x} />
                    </div>
                  );
                })
              }
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  .profile-header-name {
    display: inline;
  }

  .profile-picture-container {
    height: 150px;
    width: auto;
    overflow: hidden;
  }

  .profile-picture {
    max-height: 100%;
    border-color:;
    /* transform:scale(1.5); */
    /* object-fit:; */
    /* object-position: -287px -176px; */
  }

  main {
    font-size: 20px;
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
